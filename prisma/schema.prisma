generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                     String                   @id @unique
  email                  String                   @unique
  username               String
  hashedPassword         String
  emailVerified          Int
  forceReset             Int
  sessions               Session[]
  passwordResetToken     PasswordResetToken[]
  emailVerificationToken EmailVerificationToken[]
  messages               Message[]
  conversations          Conversation[]
  group                  Group?                   @relation(fields: [groupId], references: [id])
  groupId                String?
  isAdmin                Boolean                  @default(false)
}

model Group {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}

model Session {
  id        String   @id @unique
  userId    String
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

model EmailVerificationToken {
  id        String   @id @unique
  userId    String
  email     String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
  expiresAt DateTime
}

model PasswordResetToken {
  id        String   @id @unique
  expiresAt DateTime
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Message {
  id             String        @id @default(uuid())
  text           String
  createdAt      DateTime      @default(now())
  userId         String
  user           User          @relation(references: [id], fields: [userId], onDelete: Cascade)
  conversationId String?
  conversation   Conversation? @relation(fields: [conversationId], references: [id])
}

model Conversation {
  id        String    @id @default(uuid())
  isSpace   Boolean   @default(false)
  createdAt DateTime  @default(now())
  name      String?
  users     User[]
  messages  Message[]
}
